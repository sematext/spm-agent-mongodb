#!/usr/bin/env bash

PLATFORM=$(uname)
SERVICE_NAME=spm-agent-mongodb
SPM_AGENT_CONFIG_FILE=/etc/sematext/spm-agent-mongodb.config
LAUNCHCTL_SERVICE_FILE="/Library/LaunchDaemons/com.sematext.spm-agent-mongodb.plist"
SYSTEMD_SERVICE_FILE="/etc/systemd/system/${SERVICE_NAME}.service"
e=$'\e'
COLORblue="$e[0;36m"
COLORred="$e[0;31m"
COLORreset="$e[0m"
#nodeExecutable=`$(which node)||$(which nodejs)`
function generate_eu_config()
{
echo -e "SPM_RECEIVER_URL=https://spm-receiver.eu.sematext.com/receiver/v1
EVENTS_RECEIVER_URL=https://event-receiver.eu.sematext.com
LOGSENE_RECEIVER_URL=https://logsene-receiver.eu.sematext.com" > /etc/sematext/receivers.config
}

function generate_us_config()
{
echo -e "SPM_RECEIVER_URL=https://spm-receiver.sematext.com/receiver/v1
EVENTS_RECEIVER_URL=https://event-receiver.sematext.com
LOGSENE_RECEIVER_URL=https://logsene-receiver.sematext.com" > /etc/sematext/receivers.config
}

export SPM_TOKEN=$1
export MONGO_URL=$2

while getopts ":t:m:r:" opt; do
  case $opt in
    t)
      export SPM_TOKEN=$OPTARG
      ;;
    r)
      export REGION=$OPTARG
      if [ "$REGION" == "EU" ]; then 
      		generate_eu_config
      		exit 0
      fi;
      if [ "$REGION" == "US" ]; then 
      		generate_us_config
      		exit 0
      fi;
      ;;
    m)
      export MONGO_URL=$OPTARG
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      ;;
  esac
done

export LOGSENE_RECEIVER_URL=${LOGSENE_RECEIVER_URL:-https://logsene-receiver.sematext.com}
echo Set Logsene receiver url: $LOGSENE_RECEIVER_URL



function generate_eu_config()
{
echo -e "SPM_RECEIVER_URL=https://spm-receiver.eu.sematext.com/receiver/v1
EVENTS_RECEIVER_URL=https://apps.eu.sematext.com/event-receiver/
LOGSENE_RECEIVER_URL=https://logsene-receiver.eu.sematext.com" > /etc/sematext/receivers.config
}

function generate_us_config()
{
echo -e "SPM_RECEIVER_URL=https://spm-receiver.eu.sematext.com/receiver/v1
EVENTS_RECEIVER_URL=https://apps.eu.sematext.com/event-receiver/
LOGSENE_RECEIVER_URL=https://logsene-receiver.eu.sematext.com" > /etc/sematext/receivers.config
}

function generate_upstart()
{
echo -e "description \"SPM for MongoDB\"
start on runlevel [2345]
stop on runlevel [06]
respawn
chdir  /tmp
exec $1 $2 $3" > /etc/init/${SERVICE_NAME}.conf
runCommand "initctl reload-configuration"
stop spm-agent-mongodb 2> /dev/null
runCommand "start ${SERVICE_NAME}"
}

function generate_systemd() 
{
echo -e \
"
[Unit]
Description=SPM for MongoDB
After=network.target

[Service]
Environment=SPM_LOG_TO_CONSOLE=true
Restart=always\nRestartSec=10
ExecStart=$1 $2 $3

[Install]
WantedBy=multi-user.target" > $SYSTEMD_SERVICE_FILE


echo "Service file $SERVICE_FILE:"
cat $SYSTEMD_SERVICE_FILE
runCommand "systemctl enable $SERVICE_NAME" 1
runCommand "systemctl stop $SERVICE_NAME " 2
runCommand "systemctl start $SERVICE_NAME" 3
sleep 1
runCommand "systemctl status $SERVICE_NAME" 4
runCommand "journalctl -n 10 -u $SERVICE_NAME" 5
}

function runCommand ()
{
	echo $2 $1
	$1
}

function generate_launchctl() 
{
echo -e \
"
<?xml version=\"1.0\" encoding=\"UTF-8\"?>
<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">
<plist version=\"1.0\">
<dict>
    <key>EnvironmentVariables</key>
    <dict>
    <key>PATH</key>
     <string>/usr/local/bin/:$PATH</string>
    </dict>
    <key>Label</key>
    <string>com.sematext.spm-agent-mongodb</string>
    <key>ProgramArguments</key>
    <array>
        <string>$1</string>
        <string>$2</string>
        <string>$3</string>
    </array>
    <key>StandardErrorPath</key>
          <string>/Library/Logs/spm-agent-mongodb.log</string>
    <key>StandardOutPath</key>
        <string>/Library/Logs/spm-agent-mongodb.log</string>
    <key>RunAtLoad</key>
          <true/>
</dict>
</plist>" > $LAUNCHCTL_SERVICE_FILE


echo "Service file $LAUNCHCTL_SERVICE_FILE:"
# cat $LAUNCHCTL_SERVICE_FILE
runCommand "launchctl unload -w -F $LAUNCHCTL_SERVICE_FILE" 1
runCommand "launchctl load -w -F $LAUNCHCTL_SERVICE_FILE" 2
runCommand "launchctl start com.sematext.spm-agent-mongodb" 3
runCommand "tail -n 10 /Library/Logs/spm-agent-mongodb.log" 4
}


function install_script ()
{
	
	mkdir /etc/sematext

printf '
tokens:
  spm: %s
mongodb:
  url: 
    - url: %s

logger:
  level: info
  console: true
' "$SPM_TOKEN" "$MONGO_URL" > $SPM_AGENT_CONFIG_FILE

echo $SPM_AGENT_CONFIG_FILE
runCommand "chown root $SPM_AGENT_CONFIG_FILE"
runCommand "chmod 0600 $SPM_AGENT_CONFIG_FILE"

echo "Create config file: $SPM_AGENT_CONFIG_FILE"
# cat $SPM_AGENT_CONFIG_FILE

	if [[ $PLATFORM = "Darwin" ]]; then
		echo "Generate launchd script ${LAUNCHCTL_SERVICE_FILE}"
		generate_launchctl $1 $2 $3
		return
	fi

	if [[ `/sbin/init --version` =~ upstart ]]>/dev/null; then 
		echo "Generate upstart script ${UPSTART_SERVICE_FILE}"
		generate_upstart $1 $2 	$3
		return
	fi
	if [[ `systemctl` =~ -\.mount ]]; then 
		echo "Generate systemd script "
		generate_systemd $1 $2 $3
		return 
	fi
}

command="$(which $SERVICE_NAME) --config ${SPM_AGENT_CONFIG_FILE}"

echo $command
if [[ -n "${SPM_TOKEN}" && -n "${MONGO_URL}" ]] ; then 
  export SPM_TOKEN=${SPM_TOKEN}
  export MONGO_URL=${MONGO_URL}
  echo
else 
	echo "${COLORred}Missing paramaters. Usage:"
	echo `basename $0` "-t SPM_TOKEN -m MONGODB_URL (mongodb://dbuser:dbpassword@localhost:27017/admin)"
	echo "Please obtain your application token from https://apps.sematext.com/$COLORreset"
	read -p "${COLORblue}SPM Token: $COLORreset" token
	SPM_TOKEN=${token:-none}
	read -p "${COLORblue}MongoDB URL (mongodb://localhost:27017/admin):$COLORreset" mongodb
	MONGO_URL==${mongodb:-mongodb://localhost:27017/local}
fi 

regex='(mongodb)://[-A-Za-z0-9\+&@#/%?=~_|!:,.;]*[-A-Za-z0-9\+&@#/%=~_|]/.+'
if [[ ${MONGO_URL} =~ $regex ]]; then
	install_script $command $SPM_TOKEN $MONGO_URL; 
else
	echo "${COLORred}Invalid MongoDB URL: ${MONGO_URL}" 
    echo "Please use this URL format: mongodb://user:password@localhost:27017/db-name$COLORreset"
fi
